Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: defun

Token:
    type:  ATOM
    value: strlen_internal

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: str

Token:
    type:  ATOM
    value: n

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: if

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: deref

Token:
    type:  ATOM
    value: str

Token:
    type:  RPAREN
    value: )

Token:
    type:  NUMBER
    value: 0

Token:
    type:  RPAREN
    value: )

Token:
    type:  ATOM
    value: n

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: strlen_internal

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  ATOM
    value: str

Token:
    type:  NUMBER
    value: 1

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  ATOM
    value: n

Token:
    type:  NUMBER
    value: 1

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: defun

Token:
    type:  ATOM
    value: strlen

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: str

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: strlen_internal

Token:
    type:  ATOM
    value: str

Token:
    type:  NUMBER
    value: 0

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: defun

Token:
    type:  ATOM
    value: digitToString

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: x

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: cond

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 0

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 0

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 1

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 1

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 2

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 2

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 3

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 3

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 4

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 4

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 5

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 5

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 6

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 6

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 7

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 7

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 8

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 8

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: =

Token:
    type:  ATOM
    value: x

Token:
    type:  NUMBER
    value: 9

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  NUMBER
    value: 9

Token:
    type:  NUMBER
    value: 48

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: else

Token:
    type:  STRING
    value: ERROR

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: defun

Token:
    type:  ATOM
    value: reverse_str

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: str

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: len

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: strlen

Token:
    type:  ATOM
    value: str

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: out

Token:
    type:  STRING
    value: ..........

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: i

Token:
    type:  NUMBER
    value: 0

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: while

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: <

Token:
    type:  ATOM
    value: i

Token:
    type:  ATOM
    value: len

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: c

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: deref

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  ATOM
    value: str

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: -

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: -

Token:
    type:  ATOM
    value: len

Token:
    type:  ATOM
    value: i

Token:
    type:  RPAREN
    value: )

Token:
    type:  NUMBER
    value: 1

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: setchar

Token:
    type:  ATOM
    value: out

Token:
    type:  ATOM
    value: i

Token:
    type:  ATOM
    value: c

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: set

Token:
    type:  ATOM
    value: i

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +

Token:
    type:  ATOM
    value: i

Token:
    type:  NUMBER
    value: 1

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  ATOM
    value: out

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: defun

Token:
    type:  ATOM
    value: itoa

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: num

Token:
    type:  ATOM
    value: base

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: tmp

Token:
    type:  STRING
    value: ..........

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: i

Token:
    type:  NUMBER
    value: 0

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: while

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: >

Token:
    type:  ATOM
    value: num

Token:
    type:  NUMBER
    value: 0

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: digit

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: mod

Token:
    type:  ATOM
    value: num

Token:
    type:  ATOM
    value: base

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: let

Token:
    type:  ATOM
    value: ch

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: digitToString

Token:
    type:  ATOM
    value: digit

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: setchar

Token:
    type:  ATOM
    value: tmp

Token:
    type:  ATOM
    value: i

Token:
    type:  ATOM
    value: ch

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: +=

Token:
    type:  ATOM
    value: i

Token:
    type:  NUMBER
    value: 1

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: /=

Token:
    type:  ATOM
    value: num

Token:
    type:  ATOM
    value: base

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: reverse_str

Token:
    type:  ATOM
    value: tmp

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: defun

Token:
    type:  ATOM
    value: main

Token:
    type:  LPAREN
    value: (

Token:
    type:  RPAREN
    value: )

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: print

Token:
    type:  LPAREN
    value: (

Token:
    type:  ATOM
    value: itoa

Token:
    type:  NUMBER
    value: 123

Token:
    type:  NUMBER
    value: 10

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

Token:
    type:  RPAREN
    value: )

 Node Type: 'List' Children (4): 
	 Node Type: 'Symbol' Value: 'defun'
	 Node Type: 'Symbol' Value: 'strlen_internal'
	 Node Type: 'List' Children (2): 
		 Node Type: 'Symbol' Value: 'str'
		 Node Type: 'Symbol' Value: 'n'
	 Node Type: 'List' Children (4): 
		 Node Type: 'Symbol' Value: 'if'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: '='
			 Node Type: 'List' Children (2): 
				 Node Type: 'Symbol' Value: 'deref'
				 Node Type: 'Symbol' Value: 'str'
			 Node Type: 'Number' Value: '0'
		 Node Type: 'Symbol' Value: 'n'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: 'strlen_internal'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Symbol' Value: 'str'
				 Node Type: 'Number' Value: '1'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Symbol' Value: 'n'
				 Node Type: 'Number' Value: '1'
 Node Type: 'List' Children (4): 
	 Node Type: 'Symbol' Value: 'defun'
	 Node Type: 'Symbol' Value: 'strlen'
	 Node Type: 'List' Children (1): 
		 Node Type: 'Symbol' Value: 'str'
	 Node Type: 'List' Children (3): 
		 Node Type: 'Symbol' Value: 'strlen_internal'
		 Node Type: 'Symbol' Value: 'str'
		 Node Type: 'Number' Value: '0'
 Node Type: 'List' Children (4): 
	 Node Type: 'Symbol' Value: 'defun'
	 Node Type: 'Symbol' Value: 'digitToString'
	 Node Type: 'List' Children (1): 
		 Node Type: 'Symbol' Value: 'x'
	 Node Type: 'List' Children (12): 
		 Node Type: 'Symbol' Value: 'cond'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '0'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '0'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '1'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '1'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '2'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '2'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '3'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '3'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '4'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '4'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '5'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '5'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '6'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '6'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '7'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '7'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '8'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '8'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '='
				 Node Type: 'Symbol' Value: 'x'
				 Node Type: 'Number' Value: '9'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Number' Value: '9'
				 Node Type: 'Number' Value: '48'
		 Node Type: 'List' Children (2): 
			 Node Type: 'Symbol' Value: 'else'
			 Node Type: 'String' Value: 'ERROR'
 Node Type: 'List' Children (8): 
	 Node Type: 'Symbol' Value: 'defun'
	 Node Type: 'Symbol' Value: 'reverse_str'
	 Node Type: 'List' Children (1): 
		 Node Type: 'Symbol' Value: 'str'
	 Node Type: 'List' Children (3): 
		 Node Type: 'Symbol' Value: 'let'
		 Node Type: 'Symbol' Value: 'len'
		 Node Type: 'List' Children (2): 
			 Node Type: 'Symbol' Value: 'strlen'
			 Node Type: 'Symbol' Value: 'str'
	 Node Type: 'List' Children (3): 
		 Node Type: 'Symbol' Value: 'let'
		 Node Type: 'Symbol' Value: 'out'
		 Node Type: 'String' Value: '..........'
	 Node Type: 'List' Children (3): 
		 Node Type: 'Symbol' Value: 'let'
		 Node Type: 'Symbol' Value: 'i'
		 Node Type: 'Number' Value: '0'
	 Node Type: 'List' Children (5): 
		 Node Type: 'Symbol' Value: 'while'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: '<'
			 Node Type: 'Symbol' Value: 'i'
			 Node Type: 'Symbol' Value: 'len'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: 'let'
			 Node Type: 'Symbol' Value: 'c'
			 Node Type: 'List' Children (2): 
				 Node Type: 'Symbol' Value: 'deref'
				 Node Type: 'List' Children (3): 
					 Node Type: 'Symbol' Value: '+'
					 Node Type: 'Symbol' Value: 'str'
					 Node Type: 'List' Children (3): 
						 Node Type: 'Symbol' Value: '-'
						 Node Type: 'List' Children (3): 
							 Node Type: 'Symbol' Value: '-'
							 Node Type: 'Symbol' Value: 'len'
							 Node Type: 'Symbol' Value: 'i'
						 Node Type: 'Number' Value: '1'
		 Node Type: 'List' Children (4): 
			 Node Type: 'Symbol' Value: 'setchar'
			 Node Type: 'Symbol' Value: 'out'
			 Node Type: 'Symbol' Value: 'i'
			 Node Type: 'Symbol' Value: 'c'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: 'set'
			 Node Type: 'Symbol' Value: 'i'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: '+'
				 Node Type: 'Symbol' Value: 'i'
				 Node Type: 'Number' Value: '1'
	 Node Type: 'Symbol' Value: 'out'
 Node Type: 'List' Children (7): 
	 Node Type: 'Symbol' Value: 'defun'
	 Node Type: 'Symbol' Value: 'itoa'
	 Node Type: 'List' Children (2): 
		 Node Type: 'Symbol' Value: 'num'
		 Node Type: 'Symbol' Value: 'base'
	 Node Type: 'List' Children (3): 
		 Node Type: 'Symbol' Value: 'let'
		 Node Type: 'Symbol' Value: 'tmp'
		 Node Type: 'String' Value: '..........'
	 Node Type: 'List' Children (3): 
		 Node Type: 'Symbol' Value: 'let'
		 Node Type: 'Symbol' Value: 'i'
		 Node Type: 'Number' Value: '0'
	 Node Type: 'List' Children (7): 
		 Node Type: 'Symbol' Value: 'while'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: '>'
			 Node Type: 'Symbol' Value: 'num'
			 Node Type: 'Number' Value: '0'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: 'let'
			 Node Type: 'Symbol' Value: 'digit'
			 Node Type: 'List' Children (3): 
				 Node Type: 'Symbol' Value: 'mod'
				 Node Type: 'Symbol' Value: 'num'
				 Node Type: 'Symbol' Value: 'base'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: 'let'
			 Node Type: 'Symbol' Value: 'ch'
			 Node Type: 'List' Children (2): 
				 Node Type: 'Symbol' Value: 'digitToString'
				 Node Type: 'Symbol' Value: 'digit'
		 Node Type: 'List' Children (4): 
			 Node Type: 'Symbol' Value: 'setchar'
			 Node Type: 'Symbol' Value: 'tmp'
			 Node Type: 'Symbol' Value: 'i'
			 Node Type: 'Symbol' Value: 'ch'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: '+='
			 Node Type: 'Symbol' Value: 'i'
			 Node Type: 'Number' Value: '1'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: '/='
			 Node Type: 'Symbol' Value: 'num'
			 Node Type: 'Symbol' Value: 'base'
	 Node Type: 'List' Children (2): 
		 Node Type: 'Symbol' Value: 'reverse_str'
		 Node Type: 'Symbol' Value: 'tmp'
 Node Type: 'List' Children (4): 
	 Node Type: 'Symbol' Value: 'defun'
	 Node Type: 'Symbol' Value: 'main'
	 Node Type: 'List'
	 Node Type: 'List' Children (2): 
		 Node Type: 'Symbol' Value: 'print'
		 Node Type: 'List' Children (3): 
			 Node Type: 'Symbol' Value: 'itoa'
			 Node Type: 'Number' Value: '123'
			 Node Type: 'Number' Value: '10'
dst: value: label type: IMM_STR ValueType: NONE
defun
src1: value: strlen_internal type: IMM_STR ValueType: NONE

dst: value: t1 type: TEMP loc: [ebp - 8] ValueType: PARAM
load
src1: value: str type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t2 type: TEMP loc: [ebp - 12] ValueType: NONE
deref
src1: value: t1 type: TEMP loc: [ebp - 8] ValueType: PARAM

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
eq
src1: value: t2 type: TEMP loc: [ebp - 12] ValueType: NONE
src2: value: 0 type: IMM_NUM loc: 0 ValueType: NONE

dst: value: label_if_true_0 ValueType: NONE
if
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
src2: value: label_if_false_0 ValueType: NONE

dst: value: label_if_false_0 ValueType: NONE
label

dst: value: t5 type: TEMP loc: [ebp - 24] ValueType: PARAM
load
src1: value: str type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t4 type: TEMP loc: [ebp - 20] ValueType: NONE
add
src1: value: t5 type: TEMP loc: [ebp - 24] ValueType: PARAM
src2: value: 1 type: IMM_NUM loc: 1 ValueType: NONE

dst: value: t7 type: TEMP loc: [ebp - 32] ValueType: PARAM
load
src1: value: n type: PARAM loc: [ebp + 12] ValueType: NONE

dst: value: t6 type: TEMP loc: [ebp - 28] ValueType: NONE
add
src1: value: t7 type: TEMP loc: [ebp - 32] ValueType: PARAM
src2: value: 1 type: IMM_NUM loc: 1 ValueType: NONE

dst: 
push
src1: value: t6 type: TEMP loc: [ebp - 28] ValueType: NONE

dst: 
push
src1: value: t4 type: TEMP loc: [ebp - 20] ValueType: NONE

dst: 
call
src1: value: strlen_internal ValueType: NONE

dst: 
add_esp
src1: value: 8 type: IMM_NUM ValueType: NONE

dst: value: t8 type: TEMP loc: [ebp - 36] ValueType: NONE
assign

dst: value: t3 type: TEMP loc: [ebp - 16] ValueType: NONE
assign
src1: value: t8 type: TEMP loc: [ebp - 36] ValueType: NONE

dst: value: label_if_end_0 ValueType: NONE
jump

dst: value: label_if_true_0 ValueType: NONE
label

dst: value: t9 type: TEMP loc: [ebp - 40] ValueType: PARAM
load
src1: value: n type: PARAM loc: [ebp + 12] ValueType: NONE

dst: value: t3 type: TEMP loc: [ebp - 16] ValueType: NONE
assign
src1: value: t9 type: TEMP loc: [ebp - 40] ValueType: PARAM

dst: value: label_if_end_0 ValueType: NONE
label

dst: value: return_value type: TEMP loc: eax ValueType: NONE
return
src1: value: t3 type: TEMP loc: [ebp - 16] ValueType: NONE

dst: value: label type: IMM_STR ValueType: NONE
defun
src1: value: strlen type: IMM_STR ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: PARAM
load
src1: value: str type: PARAM loc: [ebp + 8] ValueType: NONE

dst: 
push
src1: value: 0 type: IMM_NUM loc: 0 ValueType: NONE

dst: 
push
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: PARAM

dst: 
call
src1: value: strlen_internal ValueType: NONE

dst: 
add_esp
src1: value: 8 type: IMM_NUM ValueType: NONE

dst: value: t1 type: TEMP loc: [ebp - 8] ValueType: NONE
assign

dst: value: return_value type: TEMP loc: eax ValueType: NONE
return
src1: value: t1 type: TEMP loc: [ebp - 8] ValueType: NONE

dst: value: label type: IMM_STR ValueType: NONE
defun
src1: value: digitToString type: IMM_STR ValueType: NONE

dst: value: t2 type: TEMP loc: [ebp - 12] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t1 type: TEMP loc: [ebp - 8] ValueType: NONE
eq
src1: value: t2 type: TEMP loc: [ebp - 12] ValueType: PARAM
src2: value: 0 type: IMM_NUM loc: 0 ValueType: NONE

dst: value: label_clause_1_1 ValueType: NONE
if
src1: value: t1 type: TEMP loc: [ebp - 8] ValueType: NONE
src2: value: label_next_1_1 ValueType: NONE

dst: value: label_clause_1_1 ValueType: NONE
label

dst: value: t3 type: TEMP loc: [ebp - 16] ValueType: NONE
add
src1: value: 0 type: IMM_NUM loc: 0 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t3 type: TEMP loc: [ebp - 16] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_1_1 ValueType: NONE
label

dst: value: t5 type: TEMP loc: [ebp - 24] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t4 type: TEMP loc: [ebp - 20] ValueType: NONE
eq
src1: value: t5 type: TEMP loc: [ebp - 24] ValueType: PARAM
src2: value: 1 type: IMM_NUM loc: 1 ValueType: NONE

dst: value: label_clause_2_1 ValueType: NONE
if
src1: value: t4 type: TEMP loc: [ebp - 20] ValueType: NONE
src2: value: label_next_2_1 ValueType: NONE

dst: value: label_clause_2_1 ValueType: NONE
label

dst: value: t6 type: TEMP loc: [ebp - 28] ValueType: NONE
add
src1: value: 1 type: IMM_NUM loc: 1 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t6 type: TEMP loc: [ebp - 28] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_2_1 ValueType: NONE
label

dst: value: t8 type: TEMP loc: [ebp - 36] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t7 type: TEMP loc: [ebp - 32] ValueType: NONE
eq
src1: value: t8 type: TEMP loc: [ebp - 36] ValueType: PARAM
src2: value: 2 type: IMM_NUM loc: 2 ValueType: NONE

dst: value: label_clause_3_1 ValueType: NONE
if
src1: value: t7 type: TEMP loc: [ebp - 32] ValueType: NONE
src2: value: label_next_3_1 ValueType: NONE

dst: value: label_clause_3_1 ValueType: NONE
label

dst: value: t9 type: TEMP loc: [ebp - 40] ValueType: NONE
add
src1: value: 2 type: IMM_NUM loc: 2 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t9 type: TEMP loc: [ebp - 40] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_3_1 ValueType: NONE
label

dst: value: t11 type: TEMP loc: [ebp - 48] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t10 type: TEMP loc: [ebp - 44] ValueType: NONE
eq
src1: value: t11 type: TEMP loc: [ebp - 48] ValueType: PARAM
src2: value: 3 type: IMM_NUM loc: 3 ValueType: NONE

dst: value: label_clause_4_1 ValueType: NONE
if
src1: value: t10 type: TEMP loc: [ebp - 44] ValueType: NONE
src2: value: label_next_4_1 ValueType: NONE

dst: value: label_clause_4_1 ValueType: NONE
label

dst: value: t12 type: TEMP loc: [ebp - 52] ValueType: NONE
add
src1: value: 3 type: IMM_NUM loc: 3 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t12 type: TEMP loc: [ebp - 52] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_4_1 ValueType: NONE
label

dst: value: t14 type: TEMP loc: [ebp - 60] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t13 type: TEMP loc: [ebp - 56] ValueType: NONE
eq
src1: value: t14 type: TEMP loc: [ebp - 60] ValueType: PARAM
src2: value: 4 type: IMM_NUM loc: 4 ValueType: NONE

dst: value: label_clause_5_1 ValueType: NONE
if
src1: value: t13 type: TEMP loc: [ebp - 56] ValueType: NONE
src2: value: label_next_5_1 ValueType: NONE

dst: value: label_clause_5_1 ValueType: NONE
label

dst: value: t15 type: TEMP loc: [ebp - 64] ValueType: NONE
add
src1: value: 4 type: IMM_NUM loc: 4 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t15 type: TEMP loc: [ebp - 64] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_5_1 ValueType: NONE
label

dst: value: t17 type: TEMP loc: [ebp - 72] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t16 type: TEMP loc: [ebp - 68] ValueType: NONE
eq
src1: value: t17 type: TEMP loc: [ebp - 72] ValueType: PARAM
src2: value: 5 type: IMM_NUM loc: 5 ValueType: NONE

dst: value: label_clause_6_1 ValueType: NONE
if
src1: value: t16 type: TEMP loc: [ebp - 68] ValueType: NONE
src2: value: label_next_6_1 ValueType: NONE

dst: value: label_clause_6_1 ValueType: NONE
label

dst: value: t18 type: TEMP loc: [ebp - 76] ValueType: NONE
add
src1: value: 5 type: IMM_NUM loc: 5 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t18 type: TEMP loc: [ebp - 76] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_6_1 ValueType: NONE
label

dst: value: t20 type: TEMP loc: [ebp - 84] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t19 type: TEMP loc: [ebp - 80] ValueType: NONE
eq
src1: value: t20 type: TEMP loc: [ebp - 84] ValueType: PARAM
src2: value: 6 type: IMM_NUM loc: 6 ValueType: NONE

dst: value: label_clause_7_1 ValueType: NONE
if
src1: value: t19 type: TEMP loc: [ebp - 80] ValueType: NONE
src2: value: label_next_7_1 ValueType: NONE

dst: value: label_clause_7_1 ValueType: NONE
label

dst: value: t21 type: TEMP loc: [ebp - 88] ValueType: NONE
add
src1: value: 6 type: IMM_NUM loc: 6 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t21 type: TEMP loc: [ebp - 88] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_7_1 ValueType: NONE
label

dst: value: t23 type: TEMP loc: [ebp - 96] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t22 type: TEMP loc: [ebp - 92] ValueType: NONE
eq
src1: value: t23 type: TEMP loc: [ebp - 96] ValueType: PARAM
src2: value: 7 type: IMM_NUM loc: 7 ValueType: NONE

dst: value: label_clause_8_1 ValueType: NONE
if
src1: value: t22 type: TEMP loc: [ebp - 92] ValueType: NONE
src2: value: label_next_8_1 ValueType: NONE

dst: value: label_clause_8_1 ValueType: NONE
label

dst: value: t24 type: TEMP loc: [ebp - 100] ValueType: NONE
add
src1: value: 7 type: IMM_NUM loc: 7 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t24 type: TEMP loc: [ebp - 100] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_8_1 ValueType: NONE
label

dst: value: t26 type: TEMP loc: [ebp - 108] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t25 type: TEMP loc: [ebp - 104] ValueType: NONE
eq
src1: value: t26 type: TEMP loc: [ebp - 108] ValueType: PARAM
src2: value: 8 type: IMM_NUM loc: 8 ValueType: NONE

dst: value: label_clause_9_1 ValueType: NONE
if
src1: value: t25 type: TEMP loc: [ebp - 104] ValueType: NONE
src2: value: label_next_9_1 ValueType: NONE

dst: value: label_clause_9_1 ValueType: NONE
label

dst: value: t27 type: TEMP loc: [ebp - 112] ValueType: NONE
add
src1: value: 8 type: IMM_NUM loc: 8 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t27 type: TEMP loc: [ebp - 112] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_9_1 ValueType: NONE
label

dst: value: t29 type: TEMP loc: [ebp - 120] ValueType: PARAM
load
src1: value: x type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t28 type: TEMP loc: [ebp - 116] ValueType: NONE
eq
src1: value: t29 type: TEMP loc: [ebp - 120] ValueType: PARAM
src2: value: 9 type: IMM_NUM loc: 9 ValueType: NONE

dst: value: label_clause_10_1 ValueType: NONE
if
src1: value: t28 type: TEMP loc: [ebp - 116] ValueType: NONE
src2: value: label_next_10_1 ValueType: NONE

dst: value: label_clause_10_1 ValueType: NONE
label

dst: value: t30 type: TEMP loc: [ebp - 124] ValueType: NONE
add
src1: value: 9 type: IMM_NUM loc: 9 ValueType: NONE
src2: value: 48 type: IMM_NUM loc: 48 ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t30 type: TEMP loc: [ebp - 124] ValueType: NONE

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_next_10_1 ValueType: NONE
label

dst: value: label_clause_11_1 ValueType: NONE
label

dst: value: t31 type: TEMP loc: [ebp - 128] ValueType: IMM_STR
loadstr
src1: value: ERROR type: IMM_STR ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign
src1: value: t31 type: TEMP loc: [ebp - 128] ValueType: IMM_STR

dst: value: label_cond_end_1 ValueType: NONE
jump

dst: value: label_cond_end_1 ValueType: NONE
label

dst: value: return_value type: TEMP loc: eax ValueType: NONE
return
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE

dst: value: label type: IMM_STR ValueType: NONE
defun
src1: value: reverse_str type: IMM_STR ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: PARAM
load
src1: value: str type: PARAM loc: [ebp + 8] ValueType: NONE

dst: 
push
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: PARAM

dst: 
call
src1: value: strlen ValueType: NONE

dst: 
add_esp
src1: value: 4 type: IMM_NUM ValueType: NONE

dst: value: t1 type: TEMP loc: [ebp - 8] ValueType: NONE
assign

dst: value: len type: LOCAL loc: [ebp - 12] ValueType: NONE
assign
src1: value: t1 type: TEMP loc: [ebp - 8] ValueType: NONE

dst: value: t2 type: TEMP loc: [ebp - 16] ValueType: IMM_STR
loadstr
src1: value: .......... type: IMM_STR ValueType: NONE

dst: value: out type: LOCAL loc: [ebp - 20] ValueType: IMM_STR
assign
src1: value: t2 type: TEMP loc: [ebp - 16] ValueType: IMM_STR

dst: value: i type: LOCAL loc: [ebp - 24] ValueType: NONE
assign
src1: value: 0 type: IMM_NUM loc: 0 ValueType: NONE

dst: value: label_while_start_2 ValueType: NONE
label

dst: value: t4 type: TEMP loc: [ebp - 32] ValueType: LOCAL
load
src1: value: i type: LOCAL loc: [ebp - 24] ValueType: NONE

dst: value: t5 type: TEMP loc: [ebp - 36] ValueType: LOCAL
load
src1: value: len type: LOCAL loc: [ebp - 12] ValueType: NONE

dst: value: t3 type: TEMP loc: [ebp - 28] ValueType: NONE
l
src1: value: t4 type: TEMP loc: [ebp - 32] ValueType: LOCAL
src2: value: t5 type: TEMP loc: [ebp - 36] ValueType: LOCAL

dst: value: label_while_body_2 ValueType: NONE
if
src1: value: t3 type: TEMP loc: [ebp - 28] ValueType: NONE
src2: value: label_while_end_2 ValueType: NONE

dst: value: label_while_body_2 ValueType: NONE
label

dst: value: t7 type: TEMP loc: [ebp - 44] ValueType: PARAM
load
src1: value: str type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t10 type: TEMP loc: [ebp - 56] ValueType: LOCAL
load
src1: value: len type: LOCAL loc: [ebp - 12] ValueType: NONE

dst: value: t11 type: TEMP loc: [ebp - 60] ValueType: LOCAL
load
src1: value: i type: LOCAL loc: [ebp - 24] ValueType: NONE

dst: value: t9 type: TEMP loc: [ebp - 52] ValueType: NONE
sub
src1: value: t10 type: TEMP loc: [ebp - 56] ValueType: LOCAL
src2: value: t11 type: TEMP loc: [ebp - 60] ValueType: LOCAL

dst: value: t8 type: TEMP loc: [ebp - 48] ValueType: NONE
sub
src1: value: t9 type: TEMP loc: [ebp - 52] ValueType: NONE
src2: value: 1 type: IMM_NUM loc: 1 ValueType: NONE

dst: value: t6 type: TEMP loc: [ebp - 40] ValueType: NONE
add
src1: value: t7 type: TEMP loc: [ebp - 44] ValueType: PARAM
src2: value: t8 type: TEMP loc: [ebp - 48] ValueType: NONE

dst: value: t12 type: TEMP loc: [ebp - 64] ValueType: NONE
deref
src1: value: t6 type: TEMP loc: [ebp - 40] ValueType: NONE

dst: value: c type: LOCAL loc: [ebp - 68] ValueType: NONE
assign
src1: value: t12 type: TEMP loc: [ebp - 64] ValueType: NONE

dst: value: t13 type: TEMP loc: [ebp - 72] ValueType: LOCAL
load
src1: value: out type: LOCAL loc: [ebp - 20] ValueType: IMM_STR

dst: value: t14 type: TEMP loc: [ebp - 76] ValueType: LOCAL
load
src1: value: i type: LOCAL loc: [ebp - 24] ValueType: NONE

dst: value: t15 type: TEMP loc: [ebp - 80] ValueType: LOCAL
load
src1: value: c type: LOCAL loc: [ebp - 68] ValueType: NONE

dst: value: t13 type: TEMP loc: [ebp - 72] ValueType: LOCAL
setchar
src1: value: t14 type: TEMP loc: [ebp - 76] ValueType: LOCAL
src2: value: t15 type: TEMP loc: [ebp - 80] ValueType: LOCAL

dst: value: t17 type: TEMP loc: [ebp - 88] ValueType: LOCAL
load
src1: value: i type: LOCAL loc: [ebp - 24] ValueType: NONE

dst: value: t16 type: TEMP loc: [ebp - 84] ValueType: NONE
add
src1: value: t17 type: TEMP loc: [ebp - 88] ValueType: LOCAL
src2: value: 1 type: IMM_NUM loc: 1 ValueType: NONE

dst: value: i type: LOCAL loc: [ebp - 24] ValueType: NONE
assign
src1: value: t16 type: TEMP loc: [ebp - 84] ValueType: NONE

dst: value: label_while_start_2 ValueType: NONE
jump

dst: value: label_while_end_2 ValueType: NONE
label

dst: value: t18 type: TEMP loc: [ebp - 92] ValueType: LOCAL
load
src1: value: out type: LOCAL loc: [ebp - 20] ValueType: IMM_STR

dst: value: return_value type: TEMP loc: eax ValueType: NONE
return
src1: value: t18 type: TEMP loc: [ebp - 92] ValueType: LOCAL

dst: value: label type: IMM_STR ValueType: NONE
defun
src1: value: itoa type: IMM_STR ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: IMM_STR
loadstr
src1: value: .......... type: IMM_STR ValueType: NONE

dst: value: tmp type: LOCAL loc: [ebp - 8] ValueType: IMM_STR
assign
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: IMM_STR

dst: value: i type: LOCAL loc: [ebp - 12] ValueType: NONE
assign
src1: value: 0 type: IMM_NUM loc: 0 ValueType: NONE

dst: value: label_while_start_3 ValueType: NONE
label

dst: value: t2 type: TEMP loc: [ebp - 20] ValueType: PARAM
load
src1: value: num type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t1 type: TEMP loc: [ebp - 16] ValueType: NONE
g
src1: value: t2 type: TEMP loc: [ebp - 20] ValueType: PARAM
src2: value: 0 type: IMM_NUM loc: 0 ValueType: NONE

dst: value: label_while_body_3 ValueType: NONE
if
src1: value: t1 type: TEMP loc: [ebp - 16] ValueType: NONE
src2: value: label_while_end_3 ValueType: NONE

dst: value: label_while_body_3 ValueType: NONE
label

dst: value: t4 type: TEMP loc: [ebp - 28] ValueType: PARAM
load
src1: value: num type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t5 type: TEMP loc: [ebp - 32] ValueType: PARAM
load
src1: value: base type: PARAM loc: [ebp + 12] ValueType: NONE

dst: value: t3 type: TEMP loc: [ebp - 24] ValueType: NONE
mod
src1: value: t4 type: TEMP loc: [ebp - 28] ValueType: PARAM
src2: value: t5 type: TEMP loc: [ebp - 32] ValueType: PARAM

dst: value: digit type: LOCAL loc: [ebp - 36] ValueType: NONE
assign
src1: value: t3 type: TEMP loc: [ebp - 24] ValueType: NONE

dst: value: t6 type: TEMP loc: [ebp - 40] ValueType: LOCAL
load
src1: value: digit type: LOCAL loc: [ebp - 36] ValueType: NONE

dst: 
push
src1: value: t6 type: TEMP loc: [ebp - 40] ValueType: LOCAL

dst: 
call
src1: value: digitToString ValueType: NONE

dst: 
add_esp
src1: value: 4 type: IMM_NUM ValueType: NONE

dst: value: t7 type: TEMP loc: [ebp - 44] ValueType: NONE
assign

dst: value: ch type: LOCAL loc: [ebp - 48] ValueType: NONE
assign
src1: value: t7 type: TEMP loc: [ebp - 44] ValueType: NONE

dst: value: t8 type: TEMP loc: [ebp - 52] ValueType: LOCAL
load
src1: value: tmp type: LOCAL loc: [ebp - 8] ValueType: IMM_STR

dst: value: t9 type: TEMP loc: [ebp - 56] ValueType: LOCAL
load
src1: value: i type: LOCAL loc: [ebp - 12] ValueType: NONE

dst: value: t10 type: TEMP loc: [ebp - 60] ValueType: LOCAL
load
src1: value: ch type: LOCAL loc: [ebp - 48] ValueType: NONE

dst: value: t8 type: TEMP loc: [ebp - 52] ValueType: LOCAL
setchar
src1: value: t9 type: TEMP loc: [ebp - 56] ValueType: LOCAL
src2: value: t10 type: TEMP loc: [ebp - 60] ValueType: LOCAL

dst: value: t12 type: TEMP loc: [ebp - 68] ValueType: LOCAL
load
src1: value: i type: LOCAL loc: [ebp - 12] ValueType: NONE

dst: value: i type: LOCAL loc: [ebp - 12] ValueType: NONE
addeq
src1: value: i type: LOCAL loc: [ebp - 12] ValueType: NONE
src2: value: 1 type: IMM_NUM loc: 1 ValueType: NONE

dst: value: t14 type: TEMP loc: [ebp - 76] ValueType: PARAM
load
src1: value: num type: PARAM loc: [ebp + 8] ValueType: NONE

dst: value: t15 type: TEMP loc: [ebp - 80] ValueType: PARAM
load
src1: value: base type: PARAM loc: [ebp + 12] ValueType: NONE

dst: value: num type: PARAM loc: [ebp + 8] ValueType: NONE
idiveq
src1: value: num type: PARAM loc: [ebp + 8] ValueType: NONE
src2: value: t15 type: TEMP loc: [ebp - 80] ValueType: PARAM

dst: value: label_while_start_3 ValueType: NONE
jump

dst: value: label_while_end_3 ValueType: NONE
label

dst: value: t16 type: TEMP loc: [ebp - 84] ValueType: LOCAL
load
src1: value: tmp type: LOCAL loc: [ebp - 8] ValueType: IMM_STR

dst: 
push
src1: value: t16 type: TEMP loc: [ebp - 84] ValueType: LOCAL

dst: 
call
src1: value: reverse_str ValueType: NONE

dst: 
add_esp
src1: value: 4 type: IMM_NUM ValueType: NONE

dst: value: t17 type: TEMP loc: [ebp - 88] ValueType: NONE
assign

dst: value: return_value type: TEMP loc: eax ValueType: NONE
return
src1: value: t17 type: TEMP loc: [ebp - 88] ValueType: NONE

dst: value: label type: IMM_STR ValueType: NONE
defun
src1: value: main type: IMM_STR ValueType: NONE

dst: 
push
src1: value: 10 type: IMM_NUM loc: 10 ValueType: NONE

dst: 
push
src1: value: 123 type: IMM_NUM loc: 123 ValueType: NONE

dst: 
call
src1: value: itoa ValueType: NONE

dst: 
add_esp
src1: value: 8 type: IMM_NUM ValueType: NONE

dst: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE
assign

dst: value: stdout ValueType: NONE
print
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE

dst: value: return_value type: TEMP loc: eax ValueType: NONE
return
src1: value: t0 type: TEMP loc: [ebp - 4] ValueType: NONE

Assembly written to: out.asm
